const SimpleAdderVM = artifacts.require("./test/SimpleAdderVM.sol")
const web3 = require('web3')

const toResult = (data) => {
  return {
    state: "0x" + data[0].slice(-2),//because of encoding issues, uhhhh....
    stateHash: data[1]
  }
}

contract('SimpleAdderVM', function(accounts) {
  let simpleAdderVM

  let program = [
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000001",
    "0x0000000000000000000000000000000000000000000000000000000000000002",
    "0x0000000000000000000000000000000000000000000000000000000000000003",
    "0x0000000000000000000000000000000000000000000000000000000000000004",
    "0x0000000000000000000000000000000000000000000000000000000000000005",
    "0x0000000000000000000000000000000000000000000000000000000000000006",
    "0x0000000000000000000000000000000000000000000000000000000000000007",
    "0x0000000000000000000000000000000000000000000000000000000000000008",
    "0x0000000000000000000000000000000000000000000000000000000000000009"
  ]

  before(async () => {
    simpleAdderVM = await SimpleAdderVM.deployed()
  })

  it("should merklize state", async () => {
    assert.equal(
      "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6",
      await simpleAdderVM.merklizeState.call(
        "0x0000000000000000000000000000000000000000000000000000000000000001"
      )
    )
  })

  it("should run a step", async () => {
    assert.equal(
      await simpleAdderVM.runStep.call(
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000001"
      ),
      '0x0000000000000000000000000000000000000000000000000000000000000001'
    )
  })

  it("should run steps", async () => {
    assert.deepEqual(
      await simpleAdderVM.runSteps.call(program, 5),
      [ 
        '0x000000000000000000000000000000000000000000000000000000000000000a',
        '0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8'
      ]
    )
  })
})